warn: 8/30/2021 09:31:57.215 CoreEventId.SensitiveDataLoggingEnabledWarning[10400] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.info: 8/30/2021 09:31:57.359 CoreEventId.ContextInitialized[10403] (Microsoft.EntityFrameworkCore.Infrastructure) 
      Entity Framework Core 5.0.9 initialized 'MqttdbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: SensitiveDataLoggingEnabled dbug: 8/30/2021 09:31:57.503 CoreEventId.QueryCompilationStarting[10111] (Microsoft.EntityFrameworkCore.Query) 
      Compiling query expression: 
      'DbSet<Device>()
          .Include(d => d.Measurements
              .Take(3))
          .Include(d => d.Events
              .Take(3))
          .AsSingleQuery()'dbug: 8/30/2021 09:31:57.588 CoreEventId.NavigationBaseIncluded[10112] (Microsoft.EntityFrameworkCore.Query) 
      Including navigation: 'Device.Measurements'.dbug: 8/30/2021 09:31:57.591 CoreEventId.NavigationBaseIncluded[10112] (Microsoft.EntityFrameworkCore.Query) 
      Including navigation: 'Device.Events'.warn: 8/30/2021 09:31:57.723 CoreEventId.RowLimitingOperationWithoutOrderByWarning[10102] (Microsoft.EntityFrameworkCore.Query) 
      The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results.warn: 8/30/2021 09:31:57.725 CoreEventId.RowLimitingOperationWithoutOrderByWarning[10102] (Microsoft.EntityFrameworkCore.Query) 
      The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results.dbug: 8/30/2021 09:31:57.929 CoreEventId.QueryExecutionPlanned[10107] (Microsoft.EntityFrameworkCore.Query) 
      Generated query execution expression: 
      'queryContext => new SingleQueryingEnumerable<Device>(
          (RelationalQueryContext)queryContext, 
          RelationalCommandCache.SelectExpression(
              Projection Mapping:
              SELECT d.id, d.creating_date, d.descr, d.editing_date, d.geo, d.name, t0.id, t0.air_humidity, t0.atmospheric_pressure, t0.date, t0.id_device, t0.light_level, t0.smoke_level, t0.temperature, t2.id, t2.date, t2.id_device, t2.message
              FROM device AS d
              LEFT JOIN Projection Mapping:
              (
                  SELECT t.id, t.air_humidity, t.atmospheric_pressure, t.date, t.id_device, t.light_level, t.smoke_level, t.temperature
                  FROM Projection Mapping:
                  (
                      SELECT m.id, m.air_humidity, m.atmospheric_pressure, m.date, m.id_device, m.light_level, m.smoke_level, m.temperature, ROW_NUMBER() OVER(PARTITION BY m.id_device ORDER BY m.id ASC) AS row
                      FROM measurements AS m
                  ) AS t
                  WHERE t.row <= 3
              ) AS t0 ON d.id == t0.id_device
              LEFT JOIN Projection Mapping:
              (
                  SELECT t1.id, t1.date, t1.id_device, t1.message
                  FROM Projection Mapping:
                  (
                      SELECT e.id, e.date, e.id_device, e.message, ROW_NUMBER() OVER(PARTITION BY e.id_device ORDER BY e.id ASC) AS row
                      FROM events AS e
                  ) AS t1
                  WHERE t1.row <= 3
              ) AS t2 ON d.id == t2.id_device
              ORDER BY d.id ASC, t0.id_device ASC, t0.id ASC, t2.id_device ASC, t2.id ASC), 
          Func<QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator, Device>, 
          MQTTWebApi.Models.MqttdbContext, 
          False, 
          False
      )'dbug: 8/30/2021 09:31:58.059 RelationalEventId.CommandCreating[20103] (Microsoft.EntityFrameworkCore.Database.Command) 
      Creating DbCommand for 'ExecuteReader'.dbug: 8/30/2021 09:31:58.070 RelationalEventId.CommandCreated[20104] (Microsoft.EntityFrameworkCore.Database.Command) 
      Created DbCommand for 'ExecuteReader' (80ms).dbug: 8/30/2021 09:31:58.076 RelationalEventId.ConnectionOpening[20000] (Microsoft.EntityFrameworkCore.Database.Connection) 
      Opening connection to database 'mqttdb' on server '192.168.3.160'.dbug: 8/30/2021 09:31:58.477 RelationalEventId.ConnectionOpened[20001] (Microsoft.EntityFrameworkCore.Database.Connection) 
      Opened connection to database 'mqttdb' on server '192.168.3.160'.dbug: 8/30/2021 09:31:58.485 RelationalEventId.CommandExecuting[20100] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [d].[id], [d].[creating_date], [d].[descr], [d].[editing_date], [d].[geo], [d].[name], [t0].[id], [t0].[air_humidity], [t0].[atmospheric_pressure], [t0].[date], [t0].[id_device], [t0].[light_level], [t0].[smoke_level], [t0].[temperature], [t2].[id], [t2].[date], [t2].[id_device], [t2].[message]
      FROM [device] AS [d]
      LEFT JOIN (
          SELECT [t].[id], [t].[air_humidity], [t].[atmospheric_pressure], [t].[date], [t].[id_device], [t].[light_level], [t].[smoke_level], [t].[temperature]
          FROM (
              SELECT [m].[id], [m].[air_humidity], [m].[atmospheric_pressure], [m].[date], [m].[id_device], [m].[light_level], [m].[smoke_level], [m].[temperature], ROW_NUMBER() OVER(PARTITION BY [m].[id_device] ORDER BY [m].[id]) AS [row]
              FROM [measurements] AS [m]
          ) AS [t]
          WHERE [t].[row] <= 3
      ) AS [t0] ON [d].[id] = [t0].[id_device]
      LEFT JOIN (
          SELECT [t1].[id], [t1].[date], [t1].[id_device], [t1].[message]
          FROM (
              SELECT [e].[id], [e].[date], [e].[id_device], [e].[message], ROW_NUMBER() OVER(PARTITION BY [e].[id_device] ORDER BY [e].[id]) AS [row]
              FROM [events] AS [e]
          ) AS [t1]
          WHERE [t1].[row] <= 3
      ) AS [t2] ON [d].[id] = [t2].[id_device]
      ORDER BY [d].[id], [t0].[id_device], [t0].[id], [t2].[id_device], [t2].[id]info: 8/30/2021 09:31:58.771 RelationalEventId.CommandExecuted[20101] (Microsoft.EntityFrameworkCore.Database.Command) 
      Executed DbCommand (286ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT [d].[id], [d].[creating_date], [d].[descr], [d].[editing_date], [d].[geo], [d].[name], [t0].[id], [t0].[air_humidity], [t0].[atmospheric_pressure], [t0].[date], [t0].[id_device], [t0].[light_level], [t0].[smoke_level], [t0].[temperature], [t2].[id], [t2].[date], [t2].[id_device], [t2].[message]
      FROM [device] AS [d]
      LEFT JOIN (
          SELECT [t].[id], [t].[air_humidity], [t].[atmospheric_pressure], [t].[date], [t].[id_device], [t].[light_level], [t].[smoke_level], [t].[temperature]
          FROM (
              SELECT [m].[id], [m].[air_humidity], [m].[atmospheric_pressure], [m].[date], [m].[id_device], [m].[light_level], [m].[smoke_level], [m].[temperature], ROW_NUMBER() OVER(PARTITION BY [m].[id_device] ORDER BY [m].[id]) AS [row]
              FROM [measurements] AS [m]
          ) AS [t]
          WHERE [t].[row] <= 3
      ) AS [t0] ON [d].[id] = [t0].[id_device]
      LEFT JOIN (
          SELECT [t1].[id], [t1].[date], [t1].[id_device], [t1].[message]
          FROM (
              SELECT [e].[id], [e].[date], [e].[id_device], [e].[message], ROW_NUMBER() OVER(PARTITION BY [e].[id_device] ORDER BY [e].[id]) AS [row]
              FROM [events] AS [e]
          ) AS [t1]
          WHERE [t1].[row] <= 3
      ) AS [t2] ON [d].[id] = [t2].[id_device]
      ORDER BY [d].[id], [t0].[id_device], [t0].[id], [t2].[id_device], [t2].[id]dbug: 8/30/2021 09:31:58.838 CoreEventId.StartedTracking[10806] (Microsoft.EntityFrameworkCore.ChangeTracking) 
      Context 'MqttdbContext' started tracking 'Device' entity with key '{Id: e3422041-2a19-458a-bec9-7b1d1d7bab3a}'.dbug: 8/30/2021 09:31:58.904 CoreEventId.StartedTracking[10806] (Microsoft.EntityFrameworkCore.ChangeTracking) 
      Context 'MqttdbContext' started tracking 'Measurement' entity with key '{Id: 808af23f-577a-4e45-b382-00001cb99573}'.dbug: 8/30/2021 09:31:58.943 CoreEventId.StartedTracking[10806] (Microsoft.EntityFrameworkCore.ChangeTracking) 
      Context 'MqttdbContext' started tracking 'Measurement' entity with key '{Id: 0079f91d-7150-49c5-878f-000054c6029f}'.dbug: 8/30/2021 09:31:58.945 CoreEventId.StartedTracking[10806] (Microsoft.EntityFrameworkCore.ChangeTracking) 
      Context 'MqttdbContext' started tracking 'Measurement' entity with key '{Id: db21c3b4-284d-4f78-820e-0000dfb69279}'.dbug: 8/30/2021 09:31:58.954 CoreEventId.StartedTracking[10806] (Microsoft.EntityFrameworkCore.ChangeTracking) 
      Context 'MqttdbContext' started tracking 'Device' entity with key '{Id: 7a026252-7d05-4be5-9b0f-f3e489c428c8}'.dbug: 8/30/2021 09:31:58.963 CoreEventId.StartedTracking[10806] (Microsoft.EntityFrameworkCore.ChangeTracking) 
      Context 'MqttdbContext' started tracking 'Measurement' entity with key '{Id: 8a6a0b0d-7cf9-4f82-a2ff-0005ac5e6ced}'.dbug: 8/30/2021 09:31:58.969 CoreEventId.StartedTracking[10806] (Microsoft.EntityFrameworkCore.ChangeTracking) 
      Context 'MqttdbContext' started tracking 'Measurement' entity with key '{Id: 2f9c0fe3-aaea-4a53-a3b3-0006540b4f7a}'.dbug: 8/30/2021 09:31:58.971 CoreEventId.StartedTracking[10806] (Microsoft.EntityFrameworkCore.ChangeTracking) 
      Context 'MqttdbContext' started tracking 'Measurement' entity with key '{Id: d1d55f6a-4f6d-4b8e-ae12-0006a64dfbea}'.dbug: 8/30/2021 09:31:58.978 RelationalEventId.DataReaderDisposing[20300] (Microsoft.EntityFrameworkCore.Database.Command) 
      A data reader was disposed.dbug: 8/30/2021 09:31:58.984 RelationalEventId.ConnectionClosing[20002] (Microsoft.EntityFrameworkCore.Database.Connection) 
      Closing connection to database 'mqttdb' on server '192.168.3.160'.dbug: 8/30/2021 09:31:58.991 RelationalEventId.ConnectionClosed[20003] (Microsoft.EntityFrameworkCore.Database.Connection) 
      Closed connection to database 'mqttdb' on server '192.168.3.160'.dbug: 8/30/2021 09:31:59.036 CoreEventId.ContextDisposed[10407] (Microsoft.EntityFrameworkCore.Infrastructure) 
      'MqttdbContext' disposed.